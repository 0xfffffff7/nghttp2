spdylay 0.3.3
=============

Release Note
------------

This release fixes the segmentation fault error if the name/value
pairs which include empty string name are passed as nv argument to
spdylay_submit_* functions. Spdycat gets new option to specify
arbitrary headers from command line. Shrpx gets new option to specify
allowed cipher list. Python wrapper python-spdylay was added.

Changes
-------

* Add spdylay_npn_get_proto_list() public API function.
  spdylay_npn_get_proto_list() returns a pointer to the supported SPDY
  version list. The element of the list is spdylay_npn_proto
  struct. It contains all SPDY version information this library
  supports. The application can use this information to configure NPN
  protocol offerings/selection.

* Add --enable-example configure option. If --disable-example is used,
  example programs will not be compiled.

* Fix error with w64-mingw32 cross compiler.

* Remove unused zlib.h header file from spdylay.h

* Fix segmentation fault error if the name/value pairs which include
  empty string name are passed as nv argument to spdylay_submit_*
  functions.

* spdycat: Adding arbitrary headers form the command line. Patch from
  Stephen Ludin.

* Fix intptr_t check in configure.ac. Patch from Stephen Ludin.

* shrpx: add --ciphers option to specify allowed cipher list

* python: Add Python wrapper for spdylay. It is released separately as
  python-spdylay package from PyPI.



spdylay 0.3.2
=============

Release Note
------------

This release adds many features and options to shrpx, HTTPS/SPDY
reverse proxy. Secure SPDY proxy mode was added to shrpx. Spdycat now
supports SNI, thanks to the patch contributed by Piotr Sikora.

Changes
-------

* spdycat: Add support for Server Name Indication (SNI). Patch from
  Piotr Sikora.

* spdycat: Use TLSv1_client_method

* shrpx: Add many new command-line options. It also now supports
  configuration file. Use http-parser instead of htparse. Add SPDY
  proxy mode.

* lib: Take into account shut_flags when accepting DATA frame.



spdylay 0.3.1
=============

Release Note
------------

This release fixes the bug that on_ctrl_recv_callback is not called
when RST_STREAM is received.  It also fixes the bug that
on_data_recv_callback and on_data_chunk_recv_callback is called after
the stream was closed. A multi-threaded reverse proxy for SPDY/HTTPS
is added as an example program.

Changes
-------

* Added --enable-maintainer-mode configure option If it is enabled,
  turn on extra compiler warnings.

* Don't call on_data_recv_callback and on_data_chunk_recv_callback if
  stream was closed or being closed.

* Added example program Shrpx: a multi-threaded reverse proxy for
  SPDY/HTTPS.  It accepts SPDY/HTTPS connections and converts them to
  normal HTTP and forwards to the downstream servers.

* Fixed bug on_ctrl_recv_callback not called for RST_STREAM

* Return nonzero exit status if test fails. Fixed failmalloc tests.



spdylay 0.3.0
=============

Release Note
------------

This release fixes buffer overrun when a lot of streams are created.
SPDYLAY_OPT_MAX_RECV_CTRL_FRAME_BUFFER option was added to control the
maximum payload size of the incoming control frames.

Changes
-------

* Bump up LT version to 2.0.1.

* Included <functional> from spdy.h

* Made spdylay_strerror(0) return "Success"

* Added SPDYLAY_OPT_MAX_RECV_CTRL_FRAME_BUFFER option.  This option
  sets maximum receive buffer size for incoming control frame.
  Basically the library checks the length field of the incoming
  control frame. For frames with name/value header block, the library
  also checks the length of inflated block is also under the
  limit. This is done while incrementally inflating block. If the
  length of frames with name/value header block exceeds the limit, the
  library will issue RST_STREAM with FRAME_TOO_LARGE. For other
  frames, it will issue GOAWAY.

* Incremental name/value block decompression

* Fixed buffer overrun in spdylay_pq_push
